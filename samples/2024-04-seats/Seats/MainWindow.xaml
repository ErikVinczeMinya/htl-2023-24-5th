<Window x:Class="Seats.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Seats"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel, IsDesignTimeCreatable=True}"
        Title="MainWindow" Height="900" Width="650">
    <Grid>
        <Grid.Resources>
            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="BorderThickness" Value="3" />
                <Setter Property="Margin" Value="20" />
                <Setter Property="Padding" Value="20" />
            </Style>
            <Style TargetType="GroupBox">
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="BorderThickness" Value="3" />
                <Setter Property="Margin" Value="16 0 16 5" />
                <Setter Property="Padding" Value="10" />
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Border>
            <!-- 
                Displays the floorplan. DO NOT CHANGE THIS PART. It is ok as it is.
            -->
            <ItemsControl ItemsSource="{Binding Spaces}" HorizontalAlignment="Center">
                <ItemsControl.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Width" Value="35" />
                        <Setter Property="Height" Value="35" />
                        <Setter Property="FontSize" Value="20" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="Button" x:Key="Aisle" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="Background" Value="White" />
                        <Setter Property="BorderThickness" Value="0" />
                    </Style>
                    <Style TargetType="Button" x:Key="Seat" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="Background" Value="Green" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Occupied}" Value="true">
                                <Setter Property="Background" Value="Red" />
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="Black" />
                                <Setter Property="BorderThickness" Value="2" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <DataTemplate DataType="{x:Type local:Seat}">
                        <!-- This is a button representing a reguar seat. -->
                        <Button Style="{StaticResource Seat}" Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.SeatClick}" CommandParameter="{Binding}"/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type local:Aisle}">
                        <!-- This is a placeholder for the aisle. The button has no content, so it will not be visible. -->
                        <Button Style="{StaticResource Aisle}" />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type local:WheelchairSpace}">
                        <!-- This is a button representing a wheelchair space -->
                        <Button Style="{StaticResource Seat}" Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.SeatClick}" CommandParameter="{Binding}">🧑‍🦽</Button>
                    </DataTemplate>
                </ItemsControl.Resources>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ItemsControl ItemsSource="{Binding}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

            </ItemsControl>
        </Border>

        <GroupBox Grid.Row="1" Header="Quick Pick">
            <GroupBox.Resources>
                <Style TargetType="TextBox">
                    <Setter Property="Margin" Value="0 0 5 0" />
                </Style>
                <Style TargetType="Button">
                    <Setter Property="Padding" Value="5 0 5 0" />
                </Style>
            </GroupBox.Resources>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Label>How many tickets?</Label>
                <TextBox Grid.Column="1" />
                <!-- TODO: The following button can only be clicked if the previous text box contains a value > 0 and < 5 -->
                <!-- 
                    TODO: Implement seat selection. See readme.md for details.
                -->
                <Button Grid.Column="3" >Pick best seats</Button>
            </Grid>
        </GroupBox>

        <GroupBox Grid.Row="2" Header="Tickets">
            <GroupBox.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="FontSize" Value="30" />
                </Style>
                <Style TargetType="DataGrid">
                    <Setter Property="IsReadOnly" Value="True" />
                    <Setter Property="AutoGenerateColumns" Value="False" />
                    <Setter Property="SelectionMode" Value="Single" />
                </Style>
                <Style TargetType="TextBlock" x:Key="RightAligned">
                    <Setter Property="HorizontalAlignment" Value="Right" />
                </Style>
                <Style TargetType="DataGridColumnHeader" x:Key="RightAlignedHeader">
                    <Setter Property="HorizontalContentAlignment" Value="Right" />
                </Style>
                <Style TargetType="Button">
                    <Setter Property="Padding" Value="5" />
                    <Setter Property="Margin" Value="0 5 0 5" />
                </Style>
            </GroupBox.Resources>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!-- TODO: Display list of ordered seats -->
                <DataGrid Grid.ColumnSpan="2">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Row" Width="200" Binding="{Binding Row}" />
                        <DataGridTextColumn Header="Seat" Width="200" Binding="{Binding Column}" />
                        <DataGridTextColumn Header="Price" Width="150" Binding="{Binding Price, StringFormat=\{0:#\,##0.00\}}"  HeaderStyle="{StaticResource RightAlignedHeader}" ElementStyle="{StaticResource RightAligned}"/>
                    </DataGrid.Columns>
                </DataGrid>

                <!-- TODO: The following button can only be clicked if a row has been selected in the data grid -->
                <!-- 
                    TODO: If the user clicks the button, the selected row must be removed from the list of ordered seats.
                    Additionally, the seat must no longer be occupied (i.e. they turn from red to green).
                -->
                <Button Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Right">Remove</Button>

                <TextBlock Grid.Row="2" Text="Total:" />
                
                <!-- TODO: Display the total costs for all ordered seats -->
                <TextBlock Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right" Text="25€" />
            </Grid>
        </GroupBox>
    </Grid>
</Window>
